apiVersion: apps/v1
kind: Deployment
metadata:
  name: ams-backend
  labels:
    app: ams-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ams-backend
  template:
    metadata:
      labels:
        app: ams-backend
    spec:
      containers:
      - name: backend
        image: ams-backend:latest
        ports:
        - containerPort: 3002
        env:
        - name: NODE_ENV
          value: "production"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ams-secrets
              key: jwt-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ams-backend-service
spec:
  selector:
    app: ams-backend
  ports:
  - port: 3002
    targetPort: 3002
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ams-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - ams.yourdomain.com
    secretName: ams-tls
  rules:
  - host: ams.yourdomain.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: ams-backend-service
            port:
              number: 3002