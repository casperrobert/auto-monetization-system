version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - QUANTUM_ENABLED=true
      - PREFERRED_QPU=ibm-falcon
      - QUANTUM_INTERVAL=*/30 * * * * *
      - QUANTUM_ENCRYPTION_KEY=${QUANTUM_ENCRYPTION_KEY}
      - QUANTUM_API_KEY=${QUANTUM_API_KEY}
      - ETHEREUM_NETWORK=mainnet
      - USE_POSTGRES=true
      - POSTGRES_URL=${POSTGRES_URL}
      - REDIS_CLUSTER=${REDIS_URL}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./public
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=auto_monetization
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: